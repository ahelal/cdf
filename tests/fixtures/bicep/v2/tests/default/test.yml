description: "Default "
params:
  tags: "{{ vars.tags }}"

vars:
  extra: overwritten
  match_name: "{{cdf.name}}_key"
  log_file: "{{cdf.tmp_dir}}/{{cdf.name}}_log.txt"
  hook_log_up: "pre-upall-upall-uppost-up"
  hook_log_down: "pre-downall-downall-downpost-down"
  tags:
    env: "tests"

expect:
  up:
    fail: false
    jassert:
      - "{{ result.outputs.helloword.value == 'Hello' }}"
      - "{{ result.outputs.name.value == vars.match_name }}"
      - "{{ result.outputs.extra.value == 'overwritten' }}"
      - "{{ result.outputs.tags.value == vars.tags }}"
      - "{{ result.resources | length == 1 }}"
      - "{{ include_file(vars.log_file).replace('\n','') == vars.hook_log_up }}"
      - "{{ include_file(vars.log_file).split('\n') | select('equalto', 'pre-up') | list | length == 1 }}"
      - "{{ include_file(vars.log_file).split('\n') | select('equalto', 'post-up') | list | length == 1 }}"
      - "{{ include_file(vars.log_file).split('\n') | select('equalto', 'all-up') | list | length == 2 }}"
    runner:
      cmd: "az resource show --id {{ result.resources[0].id }}"
      files: asdasd

  down:
    fail: false
    jassert:
      - "{{ include_file(vars.log_file).split('\n') | select('equalto', 'pre-down') | list | length == 1 }}"
      - "{{ include_file(vars.log_file).split('\n') | select('equalto', 'post-down') | list | length == 1 }}"
      - "{{ include_file(vars.log_file).split('\n') | select('equalto', 'all-down') | list | length == 2 }}"
  hooks:
    - fail:
        fail: True
    - print_audit:
        args: world
        jassert:
          - "{{ include_file(vars.log_file).split('\n') | select('equalto', 'print_audit world') | list | length == 1 }}"
    - az:
        jassert:
          - "{{ cdf.name | lower in hooks.az.show.stdout| lower }}"
    - cmd:
        jassert:
          - "{{ 'A=stdoutB=stderrC=print' ==  hooks.cmd.print.stdout.replace('\n','') }}"
    - script:
        jassert:
          - "{{ 'eastus2' in include_file(cdf.tmp_dir + '/script.txt') }}"
